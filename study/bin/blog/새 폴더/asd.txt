UI/UX
 - UI를 마음대로 만들면 UX가 망가질수 있음 ( ex. x표시 누르면 꺼져야 하는데 커지게 만든다는등 )

Framework
 - 코드가 영역을 벗어나 멋대로 작성되는 것을 방지하기 위하여 씀.

library
 - .java ( 컴퓨터와 대화수단 )
   - 기능이 2개 있다고 가정 
   - .java의 묶음을 패키지라 함.  = 한 패키지 안에 java파일이 많을 수 있음.
   - 패키징 = 패키지의 묶음
   - 패키지 중 하나라도 메인을 들고 있으면 패키징은 실행파일이 됨.
   - 패키지 중 하나도 메인을 안들고 있으면 library라고 함.
   - 패키징 된 파일은 .jar의 확장자 명을 가짐.
 => library = Scanner처럼 import로 땡겨쓰는것 처럼 여러 코드들을 저장해둔 모음집 
 
옵저버 패턴 
 - 정적으로 그리면 한번 그리면 끝 ( 변화 못줌 )
 - 옵저버 패턴은 동적으로 그리게 해줌 ( 달을 서버에 요청 -> 달을 그려줌 , 달이 있는 상태에서 해를 요청 -> 달을 해로 변경 )
     
flutter 는 UI Framework이다.
 flutter?
  - 언어 : Dart기반 언어, UI자료들을 다 들고있는 프레임 워크. 
    - > 한번 만들면 재활용이 안됨 
    - >    ios    > 쿠퍼티노 
         android > 메터리얼( 메터리얼 디자인에 모든 디자인을 다 박아놓음( = 컴퍼넌트 (앱에서는 위젯 )라 부름 ))
         ㄴ> UX가 망가지지 않게 디자인을 통일하기 위함으로서 만들어짐.
 flutter 가 쉬운 이유 
    - css처럼 내가 직접 만들지 않고 생성되어있는 생성자 호출만 해서 그림그림