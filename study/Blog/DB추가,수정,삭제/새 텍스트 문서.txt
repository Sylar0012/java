인서트 업데이트 딜리트
insert : 데이터 추가함. 데이터를 db에 추가한다 하면 db는 추가한 행의 갯수를 리턴함 
 ( 2개수정함 2, 오류나면 -1, 추가가 안됬으면 0을 출력)
update : 데이터를 수정함 db를 수정하면 수정한 행의 갯수를 리턴 
( 2개수정함 2, 오류나면 -1, 추가가 안됬으면 0을 출력 )
delete : 데이터를 삭제함. 행을 하나 삭제하면 1출력 

위 세개를 witle라고 함.

emp를 기반으로 emp5를 만들어라.

기본문법.

잘 들어갔다. 현재 cos는 메모리에만 존재해서 항상 commit을 해야한다.

모든행을 다 넣을거면 안적어도 된다.

잘못집어넣었으면 rollback을 쓰면 된다.
rollback을 하면 commit하기전 데이터는 다 사라진다.


Product ( 상품 )
1 바나나 5000

Order ( 주문 )

no productid userid
 1       1         2    
 2       1         1

Billing

no productid userid 
1        1          2



User
1 cos
2 ssar

이런식의 주문하는 데이터가 있다.

insert() -> order

insert() -> billing

update() -> product

주문이 들어가면 이러한 일이 일어난다. 

insert() -> order
commit;

insert() -> billing
commit;

update() -> product
commit;

이런식으로 짜면 중간에 하나가 문제가 생기면 망한다
오더가 오류나고 나머지가 다 성공하면 물건은 안주는데 결제가 된다는지 같은 경우가 생김.

이런 작업 단위를 트렌직션이라 함.

insert() -> order


insert() -> billing


update() -> product
commit;

이런식으로 짜야함. 셋중 하나가 실패하면 다 실패한걸로 간주하고 rollback으로 트렌직션을 재실행 해야한다.

트랜직션 : 여러가지 행위가 모여있는 거

insert() -> order


insert() -> billing


update() -> product
commit;
if( -1이 나오면 ){
rollback;
}else {
commit;
}

이런느낌으로 짜야한다

