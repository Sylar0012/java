뷰 리졸버

응답할때 2가지 방법이 있다.
return으로 값을 응답해줄 수 있고 (HelloWorld)
파일의 내용을 응답해 줄 수 있다.

html의 내용을 응답시키게 설정할 예정.

application.properties 에서 설정할 수 있다.

spring.mvc.view.prefix= 파일의 앞 경로.
spring.mvc.view.suffix= 확장자명.

이걸할려면 두개의 서드파티 라이브러리가 필요하다.

https://mvnrepository.com/에서 tomcat jasper 검색후 다운

9.0.22가 java11 이랑 연동되서 이거 써야함.

JSTL다운 하고 같은 방법으로 함.

저장하고 제스퍼 실행.

/demo/src/main/webapp/ << 뷰를 찾기위한 루트폴더

prefix를 쓸때 정확하게 쓰면 /demo/src/main/webapp/WEB-INF/views/ 라고 할 수 있다.

이걸 쓰려면 Enterprise를 다운받아야 한다 .

다운받고 설정 후에 html파일을 만들면 됨.
	
뷰리졸버 쓸때 저거 해야함

--------


정적과 동적 .

jsp 파일은 아파치가 해석 못함 = 응답 못함 

jsp는 템플릿 엔진이라함( html같이 생겼지만 html확장자가 아님 )

템플릿 엔진 : html에 자기의 언어를 섞을수 있는 언어를 칭함.

정적인 페이지 : 몇번을 요청하든 같은 페이지가 나옴.
패싱을 해서 사용 = > 클라이언트의 패싱이라는 공간에 html의 내용을 저장해놓음 => 요청시 저기서 꺼내줌( 통신 안함 )

동적인 페이지 : 템플릿 엔진을 이용한 페이지. 
예를들어 DB에 어떠한 최대값을 100이라 했을때 누가 110을 인서트 하면 110이 나옴 = > 내용이 바뀌는게 동적인 페이지임

템플릿 엔진을 왜 쓰나? 
 -> 동적인 페이지를 만들기 위해. 동적인 페이지는 회원정보 같은걸 찾을때 유저 수만큼 html을 만들어야 함.

동적인 페이지를 위해 jsp에 java코드를 섞는다.

어떻게 쓰냐 ?


<% 코드 %> 이렇게 쓴다.

<% int num = 10 %>
<p> 입력받은 값 : <%=num%> </p>

출력

입력받은 값 : 10 

이렇게 나옴

간단히 정리하자면 html은 정적인 페이지, 5명이 회원정보를 수정할때, 5개의 html파일이 필요함.

처음엔 서블릿의 버퍼라이트로 동적페이지를 고생해서 만들었다가 jsp가 나와서 해결됨.

